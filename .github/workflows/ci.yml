name: 🚀 CI/CD Pipeline for 2N+1 Redundancy Feature

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]
    types: [opened, synchronize, reopened, ready_for_review]

env:
  NODE_VERSION: '20'
  NEXT_PUBLIC_ENABLE_REDUNDANCY: 'true'
  CI: true

jobs:
  # =====================================
  # Code Quality & Linting
  # =====================================
  code-quality:
    name: 🧹 Code Quality
    runs-on: ubuntu-latest
    timeout-minutes: 15
    
    steps:
      - name: 📥 Checkout Code
        uses: actions/checkout@v4
      
      - name: 🟢 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
      
      - name: 📦 Install Dependencies
        run: npm ci --prefer-offline --no-audit
      
      - name: 🔍 ESLint Check
        run: |
          npm run lint -- --format=github --max-warnings=0
          echo "ESLint passed ✅"
      
      - name: 🎨 Prettier Check
        run: |
          npm run format -- --check
          echo "Prettier formatting passed ✅"
      
      - name: 🔧 TypeScript Check
        run: |
          npm run type-check
          echo "TypeScript compilation passed ✅"
      
      - name: 🏗️ Build Check
        run: |
          npm run build
          echo "Build completed successfully ✅"
        env:
          NEXT_TELEMETRY_DISABLED: 1

  # =====================================
  # Unit Tests
  # =====================================
  unit-tests:
    name: 🧪 Unit Tests
    runs-on: ubuntu-latest
    needs: code-quality
    timeout-minutes: 15
    
    steps:
      - name: 📥 Checkout Code
        uses: actions/checkout@v4
      
      - name: 🟢 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
      
      - name: 📦 Install Dependencies
        run: npm ci --prefer-offline --no-audit
      
      - name: 🧪 Run Unit Tests
        run: |
          npm run test -- --coverage --watchAll=false --testPathIgnorePatterns=e2e
          echo "Unit tests passed ✅"

  # =====================================
  # Integration Tests
  # =====================================
  integration-tests:
    name: 🔗 Integration Tests
    runs-on: ubuntu-latest
    needs: code-quality
    timeout-minutes: 30
    
    steps:
      - name: 📥 Checkout Code
        uses: actions/checkout@v4
      
      - name: 🟢 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
      
      - name: 📦 Install Dependencies
        run: |
          npm ci --prefer-offline --no-audit
          npx playwright install --with-deps
      
      - name: 🧪 Run Integration Tests
        run: |
          npm run test:e2e -- --project=chromium
          echo "Integration tests passed ✅"

  # =====================================
  # Final Status Check
  # =====================================
  ci-success:
    name: ✅ CI Success
    runs-on: ubuntu-latest
    needs: [code-quality, unit-tests, integration-tests]
    if: always()
    timeout-minutes: 5
    
    steps:
      - name: ✅ Check All Jobs Status
        run: |
          echo "Code Quality: ${{ needs.code-quality.result }}"
          echo "Unit Tests: ${{ needs.unit-tests.result }}"
          echo "Integration Tests: ${{ needs.integration-tests.result }}"
          
          # Check if any critical job failed
          if [[ "${{ needs.code-quality.result }}" == "failure" || 
                "${{ needs.unit-tests.result }}" == "failure" || 
                "${{ needs.integration-tests.result }}" == "failure" ]]; then
            echo "❌ Critical tests failed"
            exit 1
          fi
          
          echo "🎉 All CI checks passed successfully!"